// protos/io/defang/v1/fabric.proto
syntax = "proto3";

option go_package = "github.com/DefangLabs/defang/src/protos/io/defang/v1";

package io.defang.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/type/money.proto";

service FabricController {
  rpc GetStatus(google.protobuf.Empty) returns (Status) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // public
  rpc GetVersion(google.protobuf.Empty) returns (Version) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // public
  rpc Token(TokenRequest) returns (TokenResponse); // public

  rpc RevokeToken(google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc Tail(TailRequest) returns (stream TailResponse);
  rpc Update(Service) returns (ServiceInfo) {
    option deprecated = true;
  }; // used by pulumi-defang provider; should use Deploy
  rpc Deploy(DeployRequest) returns (DeployResponse);
  rpc Get(GetRequest) returns (ServiceInfo) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // should be GetService
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
    option deprecated = true;
  }; // used by pulumi-defang provider; should use Deploy or Destroy
  rpc Destroy(DestroyRequest) returns (DestroyResponse) {
    option idempotency_level = IDEMPOTENT;
  }
  rpc Publish(PublishRequest) returns (google.protobuf.Empty) {
    option deprecated = true;
  }
  rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse);
  // rpc Promote(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc GetServices(GetServicesRequest) returns (GetServicesResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // should be ListServices

  rpc GenerateFiles(GenerateFilesRequest) returns (
      GenerateFilesResponse); // deprecated; use StartGenerate/GenerateStatus
  rpc StartGenerate(GenerateFilesRequest) returns (StartGenerateResponse);
  rpc GenerateStatus(GenerateStatusRequest) returns (GenerateFilesResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  rpc Debug(DebugRequest) returns (DebugResponse);

  rpc SignEULA(google.protobuf.Empty)
      returns (google.protobuf.Empty); // AgreeToS
  rpc CheckToS(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  // deprecate - change to use *Config functions
  rpc PutSecret(PutConfigRequest) returns (google.protobuf.Empty) {
    option deprecated = true;
  };
  rpc DeleteSecrets(Secrets) returns (google.protobuf.Empty) {
    option deprecated = true;
  };
  rpc ListSecrets(ListConfigsRequest) returns (Secrets) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option deprecated = true;
  } // no values

  rpc GetConfigs(GetConfigsRequest) returns (GetConfigsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // no values
  rpc PutConfig(PutConfigRequest) returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  };
  rpc DeleteConfigs(DeleteConfigsRequest) returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  }
  rpc ListConfigs(ListConfigsRequest) returns (ListConfigsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // no values

  rpc PutDeployment(PutDeploymentRequest) returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  };

  rpc ListDeployments(ListDeploymentsRequest)
      returns (ListDeploymentsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }; // no values

  rpc CreateUploadURL(UploadURLRequest) returns (UploadURLResponse);

  rpc DelegateSubdomainZone(DelegateSubdomainZoneRequest)
      returns (DelegateSubdomainZoneResponse);
  rpc DeleteSubdomainZone(DeleteSubdomainZoneRequest)
      returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  };
  rpc GetDelegateSubdomainZone(GetDelegateSubdomainZoneRequest)
      returns (DelegateSubdomainZoneResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  };
  rpc SetOptions(SetOptionsRequest) returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  }
  rpc WhoAmI(google.protobuf.Empty) returns (WhoAmIResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  };
  rpc Track(TrackRequest) returns (google.protobuf.Empty);

  // Endpoint for GDPR compliance
  rpc DeleteMe(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  }

  rpc VerifyDNSSetup(VerifyDNSSetupRequest) returns (google.protobuf.Empty) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  rpc GetSelectedProvider(GetSelectedProviderRequest)
      returns (GetSelectedProviderResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  rpc SetSelectedProvider(SetSelectedProviderRequest)
      returns (google.protobuf.Empty) {
    option idempotency_level = IDEMPOTENT;
  }

  rpc CanIUse(CanIUseRequest) returns (CanIUseResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }

  rpc Estimate(EstimateRequest) returns (EstimateResponse);

  rpc Preview(PreviewRequest) returns (PreviewResponse);
}

enum Provider {
  PROVIDER_UNSPECIFIED = 0;
  DEFANG = 1;
  AWS = 2;
  DIGITALOCEAN = 3;
  GCP = 4;
}

message GetSelectedProviderRequest { string project = 1; }

message GetSelectedProviderResponse { Provider provider = 1; }

message SetSelectedProviderRequest {
  string project = 1;
  Provider provider = 2;
}

message VerifyDNSSetupRequest {
  string domain = 1;
  repeated string targets = 2;
}

message DestroyRequest {
  string project = 1; // defaults to tenant ID
}

message DestroyResponse { string etag = 1; }

message DebugRequest {
  repeated File files = 1;
  string etag = 2;
  string project = 3;
  string logs = 4;
  repeated string services = 5;
  bool training_opt_out = 6; // only valid for Pro users
  google.protobuf.Timestamp since = 7;
  google.protobuf.Timestamp until = 8;
  string model_id = 9; // only valid for Pro users
}

message DebugResponse {
  string general = 1;
  repeated Issue issues = 2;
  repeated string requests = 3;
  string uuid = 4; // unique identifier for the debug request
}

message Issue {
  string type = 1;
  string severity = 2;
  string details = 3;
  repeated CodeChange code_changes = 4;
}

message CodeChange {
  string file = 1;
  string change = 2;
}

message TrackRequest {
  string anon_id = 1;
  string event = 2;
  map<string, string> properties = 3;
  string os = 4;
  string arch = 5;
}

enum DeploymentMode {
  MODE_UNSPECIFIED = 0;
  DEVELOPMENT = 1;
  STAGING = 2;
  PRODUCTION = 3;
}

message CanIUseRequest {
  string project = 1;
  Provider provider = 2;
}

message CanIUseResponse {
  reserved 1;
  string cd_image = 2;
  bool gpu = 3;
  bool allow_scaling = 4;
  string pulumi_version = 5;
}

message DeployRequest {
  reserved 1;                               // was: services
  string project = 2 [ deprecated = true ]; // deprecated; use compose.name
  DeploymentMode mode = 3;
  bytes compose = 4; // yaml (or json)
  string delegate_domain = 5;
  string delegation_set_id = 6;
  bool preview = 7 [ deprecated = true ];
}

message DeployResponse {
  repeated ServiceInfo services = 1;
  string etag = 2;
}

message DeleteRequest {
  repeated string names = 1;
  string project = 2; // defaults to tenant ID
  string delegate_domain = 3;
}

message DeleteResponse { string etag = 1; }

message GenerateFilesRequest {
  string prompt = 1;
  string language = 2;
  bool agree_tos = 3;
  bool training_opt_out = 4; // only valid for Pro users
  string model_id = 5;       // only valid for Pro users
}

message File {
  string name = 1;
  string content = 2;
}

message GenerateFilesResponse { repeated File files = 1; }

message StartGenerateResponse { string uuid = 1; }

message GenerateStatusRequest { string uuid = 1; }

message UploadURLRequest {
  string digest = 1;
  string project = 2;
}

message UploadURLResponse { string url = 1; }

enum ServiceState {
  NOT_SPECIFIED = 0;

  // Build states
  BUILD_QUEUED = 1; // initial state for build
  BUILD_PROVISIONING = 2;
  BUILD_PENDING = 3;
  BUILD_ACTIVATING = 4;
  BUILD_RUNNING = 5;
  BUILD_STOPPING = 6;

  UPDATE_QUEUED = 7; // initial state for existing image

  // Deployment states
  DEPLOYMENT_PENDING = 8;
  DEPLOYMENT_COMPLETED = 9;
  DEPLOYMENT_FAILED = 10;

  BUILD_FAILED = 11;
  DEPLOYMENT_SCALED_IN = 12;
}

message ServiceInfo {
  Service service = 1;
  repeated string endpoints = 2; // list of endpoints, one for each port
  string project = 3;            // was: tenant; defaults to tenant ID
  string etag = 4;
  string status = 5;
  repeated string nat_ips = 6; // comma-separated list of NAT IPs
  repeated string lb_ips =
      7; // comma-separated list of internal CIDRs for the load-balancer
  string private_fqdn = 8; // fully qualified domain name (host)
  string public_fqdn = 9;  // fully qualified domain name (ingress)
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp updated_at = 11;
  string zone_id = 12; // zone ID for byod domain
  bool use_acme_cert =
      13; // If we should setup the facilities to use ACME(let's encrypt) certs
  reserved 14;             // was: string lb_dns
  ServiceState state = 15; // enumerated status of the service
  string domainname = 16;  // domain name for the service
  string lb_dns_name = 17; // fully qualified domain name for the load-balancer
  bool allow_scaling = 18; // true if service is allowed to autoscale
  string healthcheck = 19; // healthcheck path
  string name = 20;        // name of the service
}

message Secrets {
  option deprecated = true;
  repeated string names = 1;
  string project = 2; // defaults to tenant ID
}

message SecretValue {
  option deprecated = true;
  string name = 1;
  string value = 2;
  string project = 3; // defaults to tenant ID
}

enum ConfigType {
  CONFIGTYPE_UNSPECIFIED = 0;
  CONFIGTYPE_SENSITIVE = 1;
}

message Config {
  string name = 1;
  string value = 2;
  string project = 3;
  ConfigType type = 4;
}

message ConfigKey {
  string name = 1;
  string project = 2; // defaults to tenant ID
}

message PutConfigRequest {
  string name = 1;
  string value = 2;
  string project = 3;
  ConfigType type = 4;
}

message GetConfigsRequest { repeated ConfigKey configs = 1; }

message GetConfigsResponse { repeated Config configs = 1; }

message DeleteConfigsRequest { repeated ConfigKey configs = 1; }

message ListConfigsRequest {
  string project = 1; // defaults to tenant ID
}

message ListConfigsResponse { repeated ConfigKey configs = 1; }

enum DeploymentType {
  DEPLOYMENT_TYPE_UNSPECIFIED = 0;
  DEPLOYMENT_TYPE_HISTORY = 1;
  DEPLOYMENT_TYPE_ACTIVE = 2;
}

enum DeploymentAction {
  DEPLOYMENT_ACTION_UNSPECIFIED = 0;
  DEPLOYMENT_ACTION_UP = 1;
  DEPLOYMENT_ACTION_DOWN = 2;
}

message Deployment {
  string id = 1; // aka etag
  string project = 2;
  string provider_string = 3 [ deprecated = true ]; // was: provider
  string provider_account_id = 4;
  google.protobuf.Timestamp timestamp = 5;
  DeploymentAction action = 6;
  string region = 7;
  Provider provider = 8;
}

message PutDeploymentRequest { Deployment deployment = 1; }

message ListDeploymentsRequest {
  string project = 1;
  DeploymentType type = 2; // active or all
  uint32 limit = 3;        // number of deployments to return
}

message ListDeploymentsResponse { repeated Deployment deployments = 1; }

message TokenRequest {
  string tenant = 1;
  string auth_code = 2;      // from GitHub authorization code flow
  repeated string scope = 3; // "tail", "read", etc.
  string assertion = 4;      // jwt-bearer
  uint32 expires_in = 5;     // seconds
  string anon_id = 6;
  string refresh_token = 7;
}

message TokenResponse {
  string access_token = 1; // short-lived token
  string refresh_token = 2;
  // string token_type = 3; // "Bearer"
  // uint32 expires_in = 4; // 3600
  // string id_token = 5; // "eyJhbGciOiJSUzI…"
}

message Status { string version = 1; }

message Version {
  string fabric = 1;
  reserved 2;            // was "nats"
  string cli_min = 3;    // minimum CLI version
  string pulumi_min = 4; // minimum Pulumi provider version
}

message TailRequest {
  repeated string services = 1;
  google.protobuf.Timestamp since = 2;
  string etag = 3;
  string project = 4;
  enum LogType {
    LOG_TYPE_UNSPECIFIED = 0;
    LOG_TYPE_CD = 1;
    LOG_TYPE_BUILD = 2;
    LOG_TYPE_RUN = 4;
  }
  uint32 log_type = 5; // bitfield
  string pattern = 6;
  google.protobuf.Timestamp until = 7;
}

message LogEntry {
  string message = 1;
  google.protobuf.Timestamp timestamp = 2;
  bool stderr = 3;
  string service = 4;
  string etag = 5;
  string host = 6;
}

message TailResponse {
  reserved 1; // was "string raw"
  repeated LogEntry entries = 2;
  string service = 3;
  string etag = 4;
  string host = 5;
}

message GetServicesResponse {
  repeated ServiceInfo services = 1;
  string project = 2;
  google.protobuf.Timestamp expires_at = 3;
}

message ProjectUpdate {
  repeated ServiceInfo services = 1;
  string alb_arn = 2;
  string project = 3 [ deprecated = true ]; // deprecated; use compose.name
  bytes compose = 4;
  string cd_version = 5;
  DeploymentMode mode = 6;
  Provider provider = 7;
  uint32 project_outputs_version = 8;
  bytes project_outputs = 9; // JSON serialization of pulumi outputs. schema
                             // versioned using project_outputs_version
}

message GetRequest { // was ServiceID
  string name = 1;
  string project = 2;
}

message Service {
  option deprecated =
      true; // still used by pulumi-defang provider in state files
  string name = 1 [ deprecated = true ]; // use ServiceInfo.name
  reserved 2;                            // was: string image
  reserved 3;                            // was: Platform platform
  reserved 4;                            // was: bool internal
  reserved 5;                            // was: Deploy deploy
  reserved 6;                            // was: repeated Port ports
  reserved 7;                            // was: map<string, string> environment
  reserved 8;                            // was: Build build
  reserved 9;                            // was: repeated Secret secrets
  reserved 10;                           // was: HealthCheck healthcheck
  reserved 11;                           // was: repeated string command
  reserved 12;                           // was: string domainname
  reserved 13;                           // was: bool init
  reserved 14;                           // was: string dns_role
  reserved 15;                           // was: StaticFiles static_files
  reserved 16;                           // was: Network networks
  reserved 17;                           // was: repeated string aliases
  reserved 18;                           // was: Redis redis
  reserved 20;                           // was: string project
}

message Event {
  option deprecated = true;
  string specversion = 1; // required (but we don't care)
  string type = 2;        // required
  string source = 3;      // required
  string id = 4;          // required
  string datacontenttype = 5;
  string dataschema = 6;
  string subject = 7;
  google.protobuf.Timestamp time = 8;
  bytes data = 9;
}

message PublishRequest { Event event = 1; }

message SubscribeRequest {
  repeated string services = 1;
  string etag = 2;
  string project = 3;
}

message SubscribeResponse {
  ServiceInfo service = 1 [ deprecated = true ];
  string name = 2;
  string status = 3;
  ServiceState state = 4;
}

message GetServicesRequest { string project = 1; }

message DelegateSubdomainZoneRequest {
  repeated string name_server_records = 1;
  string project = 2;
}

message DelegateSubdomainZoneResponse { string zone = 1; }

message DeleteSubdomainZoneRequest { string project = 1; }

message GetDelegateSubdomainZoneRequest { string project = 1; }

enum SubscriptionTier {
  SUBSCRIPTION_TIER_UNSPECIFIED = 0;
  HOBBY = 1;
  PERSONAL = 2;
  PRO = 3;
  TEAM = 4;
}

message SetOptionsRequest {
  bool training_opt_out = 1; // only valid for Pro users
  string model_id = 2;       // only valid for Pro users
}

message WhoAmIResponse {
  string tenant = 1;
  string provider_account_id = 2;
  string region = 3;
  string user_id = 4;
  SubscriptionTier tier = 5;
  bool training_opt_out = 6;
}

message EstimateRequest {
  Provider provider = 1;
  string region = 2;
  bytes pulumi_preview = 3;
}

message EstimateLineItem {
  string description = 1;
  string unit = 2;
  float quantity = 3;
  google.type.Money cost = 4;
  repeated string service = 5;
}

message EstimateResponse {
  Provider provider = 1;
  string region = 2;
  google.type.Money subtotal = 3;
  repeated EstimateLineItem line_items = 4;
}

message PreviewRequest {
  Provider provider = 1;
  string region = 2;
  DeploymentMode mode = 3;
  string etag = 4;
  bytes compose = 5; // yaml (or json)
  string project_name = 6;
}

message PreviewResponse { string etag = 1; }
